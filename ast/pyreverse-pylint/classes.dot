digraph "classes" {
rankdir=BT
charset="utf-8"
"app.db.base_class.Base" [color="chocolate", fontcolor="black", label=<{Base|id<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.crud.base.CRUDBase" [color="chartreuse", fontcolor="black", label=<{CRUDBase|model : Type[ModelType]<br ALIGN="LEFT"/>|create(db: Session): ModelType<br ALIGN="LEFT"/>get(db: Session, id: Any): Optional[ModelType]<br ALIGN="LEFT"/>get_multi(db: Session): List[ModelType]<br ALIGN="LEFT"/>remove(db: Session): ModelType<br ALIGN="LEFT"/>update(db: Session): ModelType<br ALIGN="LEFT"/>}>, shape="record", style="filled"];
"app.crud.crud_item.CRUDItem" [color="chartreuse", fontcolor="black", label=<{CRUDItem|<br ALIGN="LEFT"/>|create_with_owner(db: Session): Item<br ALIGN="LEFT"/>get_multi_by_owner(db: Session): List[Item]<br ALIGN="LEFT"/>}>, shape="record", style="filled"];
"app.crud.crud_statistic.CRUDStatistic" [color="chartreuse", fontcolor="black", label=<{CRUDStatistic|<br ALIGN="LEFT"/>|create_with_customer(db: Session): Statistic<br ALIGN="LEFT"/>get_multi_by_cookie(db: Session): List[List]<br ALIGN="LEFT"/>get_multi_by_customer(db: Session): List[List]<br ALIGN="LEFT"/>get_multi_by_customer_cookie(db: Session): List[List]<br ALIGN="LEFT"/>get_multi_by_customer_platform(db: Session): List[List]<br ALIGN="LEFT"/>get_multi_by_customer_target(db: Session): List[List]<br ALIGN="LEFT"/>get_multi_by_customer_tid(db: Session): List[List]<br ALIGN="LEFT"/>get_multi_by_platform(db: Session): List[List]<br ALIGN="LEFT"/>get_multi_by_target(db: Session): List[List]<br ALIGN="LEFT"/>get_multi_by_tid(db: Session): List[List]<br ALIGN="LEFT"/>get_multi_statistics(db: Session): List[List]<br ALIGN="LEFT"/>}>, shape="record", style="filled"];
"app.crud.crud_user.CRUDUser" [color="chartreuse", fontcolor="black", label=<{CRUDUser|<br ALIGN="LEFT"/>|authenticate(db: Session): Optional[User]<br ALIGN="LEFT"/>create(db: Session): User<br ALIGN="LEFT"/>get_by_email(db: Session): Optional[User]<br ALIGN="LEFT"/>is_active(user: User): bool<br ALIGN="LEFT"/>is_superuser(user: User): bool<br ALIGN="LEFT"/>update(db: Session): User<br ALIGN="LEFT"/>}>, shape="record", style="filled"];
"app.core.config.Settings.Config" [color="hotpink", fontcolor="black", label=<{Config|case_sensitive : bool<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.user.UserInDBBase.Config" [color="mediumspringgreen", fontcolor="black", label=<{Config|orm_mode : bool<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.statistic.StatisticInDBBase.Config" [color="aliceblue", fontcolor="black", label=<{Config|orm_mode : bool<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.item.ItemInDBBase.Config" [color="antiquewhite", fontcolor="black", label=<{Config|orm_mode : bool<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.models.item.Item" [color="coral", fontcolor="black", label=<{Item|description<br ALIGN="LEFT"/>id<br ALIGN="LEFT"/>owner<br ALIGN="LEFT"/>owner_id<br ALIGN="LEFT"/>title<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.item.Item" [color="cornflowerblue", fontcolor="black", label=<{Item|<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.item.ItemBase" [color="cornflowerblue", fontcolor="black", label=<{ItemBase|description : Optional[str]<br ALIGN="LEFT"/>title : Optional[str]<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.item.ItemCreate" [color="cornflowerblue", fontcolor="black", label=<{ItemCreate|title : str<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.item.ItemInDB" [color="cornflowerblue", fontcolor="black", label=<{ItemInDB|<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.item.ItemInDBBase" [color="cornflowerblue", fontcolor="black", label=<{ItemInDBBase|id : int<br ALIGN="LEFT"/>owner_id : int<br ALIGN="LEFT"/>title : str<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.item.ItemUpdate" [color="cornflowerblue", fontcolor="black", label=<{ItemUpdate|<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.msg.Msg" [color="cornflowerblue", fontcolor="black", label=<{Msg|msg : str<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.core.config.Settings" [color="cadetblue", fontcolor="black", label=<{Settings|ACCESS_TOKEN_EXPIRE_MINUTES : int<br ALIGN="LEFT"/>API_V1_STR : str<br ALIGN="LEFT"/>BACKEND_CORS_ORIGINS : List[AnyHttpUrl]<br ALIGN="LEFT"/>EMAILS_ENABLED : bool<br ALIGN="LEFT"/>EMAILS_FROM_EMAIL : Optional[EmailStr]<br ALIGN="LEFT"/>EMAILS_FROM_NAME : Optional[str]<br ALIGN="LEFT"/>EMAIL_RESET_TOKEN_EXPIRE_HOURS : int<br ALIGN="LEFT"/>EMAIL_TEMPLATES_DIR : str<br ALIGN="LEFT"/>EMAIL_TEST_USER<br ALIGN="LEFT"/>FIRST_SUPERUSER<br ALIGN="LEFT"/>FIRST_SUPERUSER_PASSWORD : str<br ALIGN="LEFT"/>POSTGRES_DB : str<br ALIGN="LEFT"/>POSTGRES_PASSWORD : str<br ALIGN="LEFT"/>POSTGRES_SERVER : str<br ALIGN="LEFT"/>POSTGRES_USER : str<br ALIGN="LEFT"/>PROJECT_NAME : str<br ALIGN="LEFT"/>SECRET_KEY : str<br ALIGN="LEFT"/>SENTRY_DSN : Optional[HttpUrl]<br ALIGN="LEFT"/>SERVER_HOST<br ALIGN="LEFT"/>SERVER_NAME : str<br ALIGN="LEFT"/>SMTP_HOST : Optional[str]<br ALIGN="LEFT"/>SMTP_PASSWORD : Optional[str]<br ALIGN="LEFT"/>SMTP_PORT : Optional[int]<br ALIGN="LEFT"/>SMTP_TLS : bool<br ALIGN="LEFT"/>SMTP_USER : Optional[str]<br ALIGN="LEFT"/>SQLALCHEMY_DATABASE_URI : Optional[PostgresDsn]<br ALIGN="LEFT"/>STATISTIC : bool<br ALIGN="LEFT"/>USERS_OPEN_REGISTRATION : bool<br ALIGN="LEFT"/>|assemble_cors_origins(v: Union[str, List[str]]): Union[List[str], str]<br ALIGN="LEFT"/>assemble_db_connection(v: Optional[str], values: Dict[str, Any]): Any<br ALIGN="LEFT"/>get_emails_enabled(v: bool, values: Dict[str, Any]): bool<br ALIGN="LEFT"/>get_project_name(v: Optional[str], values: Dict[str, Any]): str<br ALIGN="LEFT"/>sentry_dsn_can_be_blank(v: str): Optional[str]<br ALIGN="LEFT"/>}>, shape="record", style="filled"];
"app.models.statistic.Statistic" [color="coral", fontcolor="black", label=<{Statistic|canvas<br ALIGN="LEFT"/>cookie<br ALIGN="LEFT"/>customer<br ALIGN="LEFT"/>customer_id<br ALIGN="LEFT"/>date<br ALIGN="LEFT"/>deviceId<br ALIGN="LEFT"/>hashid<br ALIGN="LEFT"/>id<br ALIGN="LEFT"/>ip<br ALIGN="LEFT"/>platform<br ALIGN="LEFT"/>target<br ALIGN="LEFT"/>tid<br ALIGN="LEFT"/>time<br ALIGN="LEFT"/>value<br ALIGN="LEFT"/>webGL<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.statistic.Statistic" [color="cornflowerblue", fontcolor="black", label=<{Statistic|<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.statistic.StatisticAPI" [color="cornflowerblue", fontcolor="black", label=<{StatisticAPI|cookie : Optional[str]<br ALIGN="LEFT"/>limit : int<br ALIGN="LEFT"/>platform : Optional[str]<br ALIGN="LEFT"/>skip : int<br ALIGN="LEFT"/>target : Optional[str]<br ALIGN="LEFT"/>tid : Optional[str]<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.statistic.StatisticBase" [color="cornflowerblue", fontcolor="black", label=<{StatisticBase|canvas : str<br ALIGN="LEFT"/>cookie : str<br ALIGN="LEFT"/>date : str<br ALIGN="LEFT"/>deviceId : str<br ALIGN="LEFT"/>hashid : str<br ALIGN="LEFT"/>ip : str<br ALIGN="LEFT"/>platform : str<br ALIGN="LEFT"/>target : str<br ALIGN="LEFT"/>tid : str<br ALIGN="LEFT"/>value : str<br ALIGN="LEFT"/>webGL : str<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.statistic.StatisticCreate" [color="cornflowerblue", fontcolor="black", label=<{StatisticCreate|<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.statistic.StatisticInDB" [color="cornflowerblue", fontcolor="black", label=<{StatisticInDB|<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.statistic.StatisticInDBBase" [color="cornflowerblue", fontcolor="black", label=<{StatisticInDBBase|customer_id : int<br ALIGN="LEFT"/>id : int<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.statistic.StatisticUpdate" [color="cornflowerblue", fontcolor="black", label=<{StatisticUpdate|<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.token.Token" [color="cornflowerblue", fontcolor="black", label=<{Token|access_token : str<br ALIGN="LEFT"/>token_type : str<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.token.TokenPayload" [color="cornflowerblue", fontcolor="black", label=<{TokenPayload|sub : Optional[int]<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.models.user.User" [color="coral", fontcolor="black", label=<{User|email<br ALIGN="LEFT"/>full_name<br ALIGN="LEFT"/>hashed_password<br ALIGN="LEFT"/>id<br ALIGN="LEFT"/>is_active<br ALIGN="LEFT"/>is_superuser<br ALIGN="LEFT"/>items<br ALIGN="LEFT"/>statistics<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.user.User" [color="cornflowerblue", fontcolor="black", label=<{User|<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.user.UserBase" [color="cornflowerblue", fontcolor="black", label=<{UserBase|email : Optional[EmailStr]<br ALIGN="LEFT"/>full_name : Optional[str]<br ALIGN="LEFT"/>is_active : Optional[bool]<br ALIGN="LEFT"/>is_superuser : bool<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.user.UserCreate" [color="cornflowerblue", fontcolor="black", label=<{UserCreate|email<br ALIGN="LEFT"/>password : str<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.user.UserInDB" [color="cornflowerblue", fontcolor="black", label=<{UserInDB|hashed_password : str<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.user.UserInDBBase" [color="cornflowerblue", fontcolor="black", label=<{UserInDBBase|id : Optional[int]<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.schemas.user.UserUpdate" [color="cornflowerblue", fontcolor="black", label=<{UserUpdate|email<br ALIGN="LEFT"/>full_name<br ALIGN="LEFT"/>password<br ALIGN="LEFT"/>password : Optional[str]<br ALIGN="LEFT"/>|}>, shape="record", style="filled"];
"app.crud.crud_item.CRUDItem" -> "app.crud.base.CRUDBase" [arrowhead="empty", arrowtail="none"];
"app.crud.crud_statistic.CRUDStatistic" -> "app.crud.base.CRUDBase" [arrowhead="empty", arrowtail="none"];
"app.crud.crud_user.CRUDUser" -> "app.crud.base.CRUDBase" [arrowhead="empty", arrowtail="none"];
"app.models.item.Item" -> "app.db.base_class.Base" [arrowhead="empty", arrowtail="none"];
"app.models.statistic.Statistic" -> "app.db.base_class.Base" [arrowhead="empty", arrowtail="none"];
"app.models.user.User" -> "app.db.base_class.Base" [arrowhead="empty", arrowtail="none"];
"app.schemas.item.Item" -> "app.schemas.item.ItemInDBBase" [arrowhead="empty", arrowtail="none"];
"app.schemas.item.ItemCreate" -> "app.schemas.item.ItemBase" [arrowhead="empty", arrowtail="none"];
"app.schemas.item.ItemInDB" -> "app.schemas.item.ItemInDBBase" [arrowhead="empty", arrowtail="none"];
"app.schemas.item.ItemInDBBase" -> "app.schemas.item.ItemBase" [arrowhead="empty", arrowtail="none"];
"app.schemas.item.ItemUpdate" -> "app.schemas.item.ItemBase" [arrowhead="empty", arrowtail="none"];
"app.schemas.statistic.Statistic" -> "app.schemas.statistic.StatisticInDBBase" [arrowhead="empty", arrowtail="none"];
"app.schemas.statistic.StatisticCreate" -> "app.schemas.statistic.StatisticBase" [arrowhead="empty", arrowtail="none"];
"app.schemas.statistic.StatisticInDB" -> "app.schemas.statistic.StatisticInDBBase" [arrowhead="empty", arrowtail="none"];
"app.schemas.statistic.StatisticInDBBase" -> "app.schemas.statistic.StatisticBase" [arrowhead="empty", arrowtail="none"];
"app.schemas.statistic.StatisticUpdate" -> "app.schemas.statistic.StatisticBase" [arrowhead="empty", arrowtail="none"];
"app.schemas.user.User" -> "app.schemas.user.UserInDBBase" [arrowhead="empty", arrowtail="none"];
"app.schemas.user.UserCreate" -> "app.schemas.user.UserBase" [arrowhead="empty", arrowtail="none"];
"app.schemas.user.UserInDB" -> "app.schemas.user.UserInDBBase" [arrowhead="empty", arrowtail="none"];
"app.schemas.user.UserInDBBase" -> "app.schemas.user.UserBase" [arrowhead="empty", arrowtail="none"];
"app.schemas.user.UserUpdate" -> "app.schemas.user.UserBase" [arrowhead="empty", arrowtail="none"];
}
